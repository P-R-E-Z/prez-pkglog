name: Release RPM

on:
  push:
    tags:
      - "v*"

jobs:
  build-and-sign:
    runs-on: ubuntu-latest
    container:
      image: fedora:latest
    env:
      COPR_LOGIN: ${{ secrets.COPR_LOGIN }}
      COPR_TOKEN: ${{ secrets.COPR_TOKEN }}
      GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
      GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
    steps:
      - name: Install build tools
        run: |
          dnf -y install rpm-build rpmlint gnupg copr-cli git-core python3-pip
          pip install build

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Import GPG key (for rpmsign)
        if: env.GPG_PRIVATE_KEY != ''
        run: |
          echo "$GPG_PRIVATE_KEY" | base64 -d | gpg --batch --import -
          echo "%_gpg_name Prez" >> ~/.rpmmacros
          printf "%%_signature gpg\n%%_gpg_path ~/.gnupg\n%%_gpgbin $(which gpg)\n%%_gpg_passphrase $GPG_PASSPHRASE\n" >> ~/.rpmmacros

      - name: Build source distribution
        run: |
          python3 -m build --sdist
          rpmlint -v prez-pkglog.spec || true

      - name: Build SRPM and RPM
        run: |
          rpmbuild -bs prez-pkglog.spec --define "_sourcedir $(pwd)" --define "_srcrpmdir $(pwd)/dist"
          rpmbuild -bb prez-pkglog.spec --define "_sourcedir $(pwd)" --define "_rpmdir $(pwd)/dist" --define "_srcrpmdir $(pwd)/dist"

      - name: Run rpmlint on built RPMs
        run: rpmlint dist/*.rpm || true

      - name: Sign RPMs
        if: env.GPG_PRIVATE_KEY != ''
        run: |
          for rpm in dist/*.rpm; do
            rpmsign --addsign "$rpm"
          done

      - name: Upload to Copr
        if: env.COPR_LOGIN != '' && env.COPR_TOKEN != ''
        run: |
          for srpm in dist/*.src.rpm; do
            copr-cli build "$COPR_LOGIN/prez-pkglog" "$srpm"
          done 